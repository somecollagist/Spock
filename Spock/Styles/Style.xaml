<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:local="clr-namespace:Spock"
					x:Class="Spock.Style"
					x:Name="ThemeDictionary">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Dark.xaml"/> <!-- Default theme in editor because dark mode FTW -->
	</ResourceDictionary.MergedDictionaries>

	<VisualBrush
		x:Key="HatchBrush"
		TileMode="Tile"
		Viewport="0,0,5,5" ViewportUnits="Absolute"
		Viewbox="0,0,5,5" ViewboxUnits="Absolute">
		<VisualBrush.Visual>
			<Grid
				Background="Transparent">
				<Path
					Data="M 0 15 L 15 0"
					Stroke="{DynamicResource BackgroundDim}"/>
				<Path
					Data="M 0 0 L 15 15"
					Stroke="{DynamicResource BackgroundDim}"/>
			</Grid>
		</VisualBrush.Visual>
	</VisualBrush>

	<Style
		x:Key="WindowStyle"
		TargetType="Window">
		<Setter Property="WindowStyle" Value="None"/>
		<Setter Property="AllowsTransparency" Value="True"/>
		<Setter Property="ResizeMode" Value="CanMinimize"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CaptionHeight="36"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Window}">
					<Grid
						Background="{DynamicResource BackgroundDim}"
						VerticalAlignment="Top">
						<Grid.RowDefinitions>
							<RowDefinition Height="36"/>
							<RowDefinition Height="450"/>
						</Grid.RowDefinitions>
						<Label
							Content="Spock"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"/>
						<StackPanel
							Height="36"
							Grid.Row="0"
							Orientation="Horizontal"
							HorizontalAlignment="Right" VerticalAlignment="Center"
							WindowChrome.IsHitTestVisibleInChrome="True">
							<Button
								x:Name="MinimiseButton"
								Content="-"
								Style="{DynamicResource WindowButton}"
								Click="MinimiseClicked"/>
							<Button
								x:Name="CloseButton"
								Content="×"
								Style="{DynamicResource WindowButton}"
								Click="CloseClicked"/>
						</StackPanel>
						<ContentPresenter
							Content="{TemplateBinding Content}"
							Height="450" Width="{TemplateBinding Width}"
							Grid.Row="1"
							ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Grid">
		<Setter Property="Background" Value="Transparent"/>
	</Style>

	<Style TargetType="Frame">
		<Setter Property="NavigationUIVisibility" Value="Hidden"/>
	</Style>

	<Style TargetType="Label">
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="16"/>
	</Style>

	<Style TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource BackgroundDim}"/>
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="10,2"/>
		<Setter Property="Margin" Value="2.5,5,2.5,5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border
							x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<TextBlock
								x:Name="ContentPresenter"
								Text="{TemplateBinding Content}"
								Foreground="{TemplateBinding Foreground}"
								HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Accent}" />
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource AccentDim}" />
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Disabled}" />
							<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Border}" />
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ForegroundDim}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="WindowButton">
		<Setter Property="Background" Value="{DynamicResource BackgroundDim}"/>
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="5,0,5,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid
						Width="36">
						<Border
							x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<TextBlock
								x:Name="ContentPresenter"
								Text="{TemplateBinding Content}"
								Foreground="{TemplateBinding Foreground}"
								HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="#A0A0A0" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="border" Value="#D0D0D0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="border" Value="{DynamicResource Disabled}" />
							<Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{DynamicResource ForegroundDim}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToggleButton">
		<Setter Property="Background" Value="{DynamicResource BackgroundDim}"/>
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Border}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="2">
						<ContentPresenter
							HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="{DynamicResource Accent}"/>
				<Setter Property="Foreground" Value="{DynamicResource Border}"/>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource AccentDim}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="RadioButton">
		<Setter Property="Background" Value="{DynamicResource BackgroundDim}"/>
		<Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Margin" Value="2.5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<BulletDecorator
						Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid
								Height="12" Width="12">
								<Ellipse
									x:Name="EllipseInterior"
									Stroke="{DynamicResource Border}"
									Fill="Transparent">
								</Ellipse>
								<Ellipse
									Margin="4"
									Fill="{DynamicResource Border}"/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter
							Margin="4,0,0,0"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="EllipseInterior" Value="{DynamicResource AccentDim}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Fill" TargetName="EllipseInterior" Value="{DynamicResource Accent}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Fill" TargetName="EllipseInterior" Value="{DynamicResource BackgroundDim}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarEndButton" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Label
						Content="{TemplateBinding Content}"
						Foreground="{DynamicResource Foreground}"
						FontSize="8"
						HorizontalAlignment="Center" VerticalAlignment="Top"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarTrackButton" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Border
						Background="Transparent"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="ScrollBarThumb" TargetType="Thumb">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border
						Background="{DynamicResource BackgroundDim}"
						BorderBrush="{DynamicResource BackgroundDim}"
						CornerRadius="10"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="18"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="18"/>
			</Grid.RowDefinitions>
			<RepeatButton
				Content="▲"
				Style="{DynamicResource ScrollBarEndButton}"
				Grid.Row="0"
				Height="18"
				Command="ScrollBar.LineUpCommand"/>
			<Track
				Grid.Row="1"
				IsDirectionReversed="True">
				<Track.DecreaseRepeatButton>
					<RepeatButton
						Style="{DynamicResource ScrollBarTrackButton}"
						Command="ScrollBar.PageUpCommand"/>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb
						Style="{StaticResource ScrollBarThumb}"/>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton
						Style="{DynamicResource ScrollBarTrackButton}"
						Command="ScrollBar.PageDownCommand"/>
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton
				Content="▼"
				Style="{DynamicResource ScrollBarEndButton}"
				Grid.Row="2"
				Height="18"
				Command="ScrollBar.LineDownCommand"/>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="18"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="18"/>
			</Grid.ColumnDefinitions>
			<RepeatButton
				Content="◀"
				Style="{DynamicResource ScrollBarEndButton}"
				Grid.Column="0"
				Height="18"
				Command="ScrollBar.LineLeftCommand"/>
			<Track
				Grid.Column="1"
				IsDirectionReversed="True">
				<Track.DecreaseRepeatButton>
					<RepeatButton
						Style="{DynamicResource ScrollBarTrackButton}"
						Command="ScrollBar.PageLeftCommand"/>
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb
						Style="{StaticResource ScrollBarThumb}"/>
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton
						Style="{DynamicResource ScrollBarTrackButton}"
						Command="ScrollBar.PageRightCommand"/>
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton
				Content="▶"
				Style="{DynamicResource ScrollBarEndButton}"
				Grid.Column="2"
				Height="18"
				Command="ScrollBar.LineRightCommand"/>
		</Grid>
	</ControlTemplate>

	<Style TargetType="ScrollBar">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="18"/>
				<Setter Property="Template" Value="{DynamicResource HorizontalScrollBar}"/>
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="Auto"/>
				<Setter Property="Template" Value="{DynamicResource VerticalScrollBar}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Path">
		<Setter Property="Stroke" Value="{DynamicResource Foreground}"/>
	</Style>

	<Style TargetType="ListView">
		<Setter Property="Background" Value="{DynamicResource BackgroundDim}"/>
	</Style>

</ResourceDictionary>